'use strict';

var _taggedTemplateLiteral = require('./utils/taggedTemplateLiteral');

var _validator = require('@layout-css/validator');

var isRestyledComponent = function isRestyledComponent(node) {
  var exceptions =
    arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return (
    node.tag.type === 'CallExpression' &&
    node.tag.callee.name === 'styled' &&
    node.tag.arguments[0].type === 'Identifier' &&
    exceptions.indexOf(node.tag.arguments[0].name) === -1
  );
};

module.exports = {
  create: function create(context) {
    return {
      TaggedTemplateExpression: function TaggedTemplateExpression(node) {
        if (isRestyledComponent(node, context.options)) {
          var content = (0,
          _taggedTemplateLiteral.getTaggedTemplateLiteralContent)(node);
          var invalidProperties = (0, _validator.findInvalidLayoutProperties)(
            content
          );

          if (invalidProperties.length) {
            context.report({
              node: node,
              //  loc: target.node.loc,
              message: 'styled-component template contains css that modifies appearance: '.concat(
                invalidProperties.join(', '),
                ' .'
              ), //  data: target,
            });
          }
        }
      },
    };
  },
};
